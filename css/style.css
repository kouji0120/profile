@charset "UTF-8";
/*BEMの考え方
------------------Block----------------------
1.どこでも使いまわせて、かつ特定の場所に依存しないようにする
2.Block自体にposition,float,marginを指定しない（どこでも使いまわしたいため、レイアウトに関するスタイリングをしない。）
3.命名規則は単語が複数の場合、block-nameのようにハイフンでつなげる
4.命名規則は「それが何か」を表すようにする。➩(例：error)  見た目で表すのは適切ではない。➩(例：red-text)
5.メニューblock,検索block,認証block,メディアblock
------------------Element----------------------
1.Blockの名前に、アンダースコア二つつけて継承する。(例：Block名__Element)
2.Blockの外で独立して使用できない。
3.命名規則は複数単語の場合、[block-name__element-name]
4.命名規則は「それが何か」を表すようにする。例：「menu__item」の場合、「このelementはmenuのitemである」となり、適切。
5.命名規則のダメな例：menu__brownやmenu__boldのように見た目に引きずられないように。
6.block内の構造が変わることがあるため、elementの中にelementをネストしない。menu__item__linkのようにlinkがitemの中にネストされている。
7.blockの中にblockを配置するのはOK。
8.Elementはblockに対するオプション。必ずしもElementは必要ではない
------------------Modifier----------------------
.logoに枠線を付けたいなどの要件はmixではなくmodifierを利用する。例：.logo/element_bordered/modifier{border 1px solid #fff}
1.Block,Elementの見た目や状態、振る舞い、を定義するもの
2.elementに対するオプション要素の位置づけ。必ずしも必要ではない
3.単独で使用することはできず、必ずblockかelementがある状態で二つ目以降にModifierをつける。
4.二つ目以降とは➩「a class="btn btn_size_s"」こんな感じ
5.命名規則はblockまたはelementの名前を継承しアンダースコア一つけて、modifierの名前をつける。
6.ulタブの見た目を四角で囲むようなレイアウトにしたい場合。：ul class="menu menu_layout_inline"➩レイアウトをガラッと変更したいときにも使用できる。
7.命名規則例：block__element_modifier
8.「キーと値の組み合わせ」と「真偽値」という２つのタイプがある。(キーと値をアンダースコアで区切る「スネークケース」を利用する。)
9.真偽値のmodifierはおおむね一語で完結するように書く。例：menu__item_actived(メニューのアイテムがアクティブになっている)
10.キーと値のmodifierは、その、blockまたはelementの何（キー）が、どう（値）であるかを表すように書く。例：menu__layout_inline(メニューblockのレイアウトがインラインに。)
11.命名規則　複数の場合、例：global-nav/block名__link-item/element名_（color-theme/キー_caution/値）/modifier
12.命名規則は「それがどうであるか」を重視する。
13.10概ね３パターンに分かれる。見た目、状態、振る舞い。
14.見た目（キーと値タイプ）➩どんなサイズ？どの色？どのテーマに属する？例：size_s(サイズがs)　theme_caution(テーマは警告テーマ。赤く強調表示されるイメージ),button/element_theme/キー_caution/値
15.状態（真偽値タイプ）➩他のblock、elementと比べて何が違う？例：disabled(使用不可)、focused(フォーカスされている)、actived(アクティブになっている)
16.振る舞い（キーと値タイプ）➩それがどのようにふるまうか？例：direction_right-to-left(文章は右から左に)、position-bottom-right(ポジションは右下)、button_direction_right-to-left
17.同じスタイルを上書きするmodifierを複数つけるのはNG。例：button_size_s button_size_m➩結局ボタンのサイズはSかｍかわからない。
18.header block,の中にlogo,search,menuなどネストしまくってOK.むしろBEMが推奨している。
19.「Mix」のテクニック。ヘッダーの場合,header>.menu.header__menu+logo.header__logo
------------------Mixというテクニック----------------------
1.logoと.seachの間に余白を開けたいなどのレイアウトに絡む調整をする場合、利用する。例：head__logo{mr:30px;}
2.グループセレクター使用したスタイリング➩例えばheaderとfooterのスタイルがかぶっている場合、cssで.header,.footer{}とするのではなく、テキストサイズが変わるのを予測してtextというBlockを両方に作り.textクラスにサイズを指定する。
3.
------------------BEMを成功させるコツ----------------------
DOMモデルではなくBlockという単位をベースに考えよう
IDセレクターと要素型セレクターは使用しないようにしよう
子（孫）セレクターでネストされるセレクターの数はなるべく少なくしよう
名前の衝突を避ける為にまた、コードから情報が読みとれるように命名規則にきちんと従ったクラス名をつけよう
Blockなのか、elementなのかmodifierなのかを常に意識しよう
blockまたはelementで変更が頻繁に起こりそうなスタイルのプロパティはmodifierに移しておこう
mixを積極的に活用しよう
管理性を高めるためにblockは一つ一つがなるべく小さくなるように分割しよう
blockを積極的に再利用しよう

レイアウトとコンテンツにまつわるスタイリングを一緒にしてはだめ

*/

html{
    font-size: 62.5%;/*rem指定にしたいため*/
}
body{
    font-size: 1.6rem;
    letter-spacing: 0.05em;
    color: #202020;
    font-family: EB Garamond,Times New Roman,ＭＳ 明朝,MS Mincho,ヒラギノ明朝 ProN W3,Hiragino Mincho ProN,メイリオ,meiryo,serif;
    font-family: "游明朝体", "Yu Mincho", YuMincho, "ヒラギノ明朝 Pro", "Hiragino Mincho Pro", "MS P明朝", "MS PMincho", serif;;
    font-weight: Medium;
    line-height: 1.7;
    letter-spacing: 0.05em;
    background: #f4f4f4;
}

a{
    text-decoration: none;
}
img{
    width: 100%;
    height: 100%;
    vertical-align: bottom;
}

.margin_bottom{
    margin-bottom: 300px;
    padding-left: 120px;
}




/*header----------------------------------------------*/
/*Block-------------*/

.logo{
    width: 178px;
    height: 90px;
    z-index: 1;
    transform: rotate(90deg);
}

.menu {
    font-size: 1.7rem;
}

/*Element-------------*/
.header__inner{
    max-width: 1280px;
    height: 100%;
    padding-right: 0;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
}
.menu__list{
    padding-left: 30px;
    text-transform: uppercase;
}

.menu__link {
    padding: 5px;
    font-size: 1.5rem;
    color:  #202020;
    text-decoration: none;
  
}


/*Mix-------------*/
.header__menu_position_fixed{
    position: fixed;
    padding-top: 50px;
}

.header__logo_absolute{
    position: absolute;
    transform-origin: left top;
    top: 400px;
    left: 100px;
}
.flex{
    display: flex;
    justify-content: space-between;
}
.big-bg{
    background-position: center ;
    background-repeat: no-repeat;
    background-size: cover;
}


/*content----------------------------------------------*/
/*Block-------------*/

/*top----------------------------------------------*/
/*Block-------------*/
.top{
    background-image: url(/images/top.jpg);
    width: 100%;
    height: 800px;
}

/*Element-------------*/
.top-text{
    font-weight: bold;
}
.top__inner{
    max-width: 845px;
    padding-top: 50px;
    margin-bottom: 100px;
    margin-right: auto;
    margin-left: auto;
}






/*profile----------------------------------------------*/
/*Block-------------*/
.profile-img__wrapper{
    width: 250px;
    height: 300px;
}
.profile-img{
    object-fit: cover;
    background-size: cover;
    overflow: hidden;
    width: 250px;
    height: 300px;
}
.object{
    background-image: url(/images/bg-wave.svg);
    width: 300px;
    height: 300px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    z-index: 1000;
    writing-mode: vertical-lr;
}
/*Element-------------*/

.profile__inner{
    max-width: 845px;
    
    margin-right: auto;
    margin-left: auto;
}

.profile-item{
    display: flex;
    justify-content: space-between;
    padding-top: 50px;
}
.profile-text{
    margin-left: 30px;
}

.object__text{
    width: 100px;
    font-size: 3.6rem;
    padding-top: 30px;
    padding-left: 15px;
}
.profile-text__title{
    margin-bottom: 20px;
    font-size: 2rem;
}
.profile-text__lead{
    font-size: 2rem;
}
.profile-text__lead_center{
    margin-bottom: 20px;
    font-size: 2rem;
}
.profile-text__lead_bottom{
    font-size: 1.4rem;
}
/*Mix-------------*/
.object-relative{
    position: relative;
}
.object_absolute{
    position: absolute;
    top: -150px;
    left: -100px;
    z-index: -1;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    
}
.gray-before{
    position: relative;
}
.gray-before:before {
    top: 0;
    height: 450px;
    position: absolute;
    left: 0;
    z-index: -1;
    display: block;
    width: 100%;
    content: "";
    background: #e9e9e9;
}




/*service----------------------------------------------*/
/*Block-------------*/

.service__inner{
    max-width: 845px;
    
    margin-right: auto;
    margin-left: auto;
}
.service-relative{
    position: relative;
}
.card{
    box-shadow: 0 3px 6px rgba(0, 0,0,.16);
    width: 48%;
    z-index: 1000;
}
/*Element-------------*/
.service__card-wrapper{
    display: flex;
    justify-content: space-between;
}
.service__card{
    padding-top: 30px;
}
.card__img-wrapper{
    position: relative;
    margin: 0 auto;
    width: 100px;
    height: 100px;
    
}
.card__img{
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}
.card__body{
    padding: 15px;
}
.card__body>*:last-child{
    margin-bottom: 0;
}
.card__title{
    text-align: center;
    margin-bottom: 20px;
}
.card__text{
    color: #777;
    font-size: 1.4rem;
    padding-top: 10px;
}
.card__link{
    color: #202020;
    transition: .25s;
    font-size: 1.3rem;
}
.card__link:hover{
    transition: .25s;
    text-decoration: underline;
}
/*Modifier-------------*/

/*Mix-------------*/





/*skill----------------------------------------------*/
/*block-------------*/
.skill-icon{
    width: 150px;
}
/*element-------------*/
.skill__skill-icon-wrapper{
    display: flex;
    justify-content: space-between;
    text-align: center;
}
.skill__inner{
    max-width: 845px;
   
    margin-right: auto;
    margin-left: auto;
}

.skill-icon__img-wrapper{
    position: relative;
    width: 100px;
    height: 100px;
    margin: 0 auto;
}
.skill-icon__img{
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
}

.skill-icon__body{
    text-align: center;
    padding-top: 10px;
    font-weight: bold;
    font-size: 2rem;
}
/*Modifier-------------*/

/*Mix-------------*/
/*works----------------------------------------------*/
/*block-------------*/
.works__title-text{
    text-align: center;
    padding-top: 30px;
}
.woks_abusolute{
    z-index: -1;
}
.grid{
    display: grid;
    gap: 0;
    grid-template-columns: 1fr 1fr 1fr;
    z-index: -1;
}

.grid__img-wrapper{
    height: 160px;
}
.grid__img-wrapper a:hover{
    color: rgba(0, 0, 0, 0.6);
    z-index: 2000;
}

/*element-------------*/
.works__grid{
    padding-top: 100px;
}
.works__inner{
    max-width: 845px;
    
    margin-right: auto;
    margin-left: auto;
}
/*mix-------------*/
.works__margin-top{
    margin-top: 50px;
}

/*contact----------------------------------------------*/
/*block-------------*/

/*element-------------*/
.contact-form__inner{
    display: flex;
    justify-content: space-between;
}
.contact__inner{
    max-width: 845px;
    
    margin-right: auto;
    margin-left: auto;
}
.contact__text{
    width: 845px;
    text-align: center;
    margin-bottom: 60px;
}





.text-wrapper{
    width: 30%;
}
.message-wrapper{
    width: 55%;
}
.form__item{
    list-style: none;
}
.form__item:first-child{
margin-bottom: 50px;
}
.form__name,.form__email,.form__message{
    font-size: 1.3rem;
}
.form__name-text,.form__email-text,.form__message-textarea{
    width: 100%;
}
.form__name-text,.form__email-text{
    background-color: transparent;
    border: none;
    border-bottom: 1px solid #777;
    outline: none;
    padding: 0 8px;
    line-height:30px;
    border-radius: 0;
}
.form__message-textarea{
    border: none;
    outline: none;
    padding: 8px 8px;/*テキストに入れたときの文字の余白!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
}
.form__name,.form__email,.form__message{
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}










.submit__btn{
    display: block;
    margin: 0 auto;
    width: 100px;
    align-items: center;
    padding: 10px 5px;
    border: none;
    border-bottom: 1px solid #777;
    font-size: 1.3rem;
    text-align: center;
    text-decoration: none;
    transition: .25s;
    background-color: transparent;
    letter-spacing: 0.1em;
    outline: none;
}
.submit__btn:focus,
.submit__btn:hover{
    width: 50px;
}
/*element-------------*/
.contact__contact-form-wrapper{
    padding-top: 50px;
}



/*sns----------------------------------------------*/
.sns__wrapper{
    display: flex;
    justify-content: space-between;
    margin-left: auto;
    margin-right: 0;
    z-index: 1000;
}
.sns__box{
    width: 30%;
    
}
.sns__padding-none{
    padding-left: 0;
}
.sub__title{
    border-bottom: 1px solid gray;
    padding-bottom: 5px;
}
.padding-top{
    padding-top: 50px;
}
.sns__object{
    top: -550px;
    z-index: -1;
}
.end-message {
    display: none;
}
.false-message {
    display: none;
}



/*footer----------------------------------------------*/


.footer{
    padding-top: 20px;
    padding-bottom: 60px;
    text-align: center;
}
.footer__inner{
    max-width: 845px;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
}



/*SMACSSの考え方*/
/*下記の5つに分けて構成する。通常それぞれフォルダを分けて、その中にcssファイルを作成し使用する。
1.ベース
2.レイアウト
3.モジュール
4.状態（ステート）
5.テーマ*/

